{"version":3,"file":"static/js/307.043d8c86.chunk.js","mappings":"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","sources":["components/LoginForm/validations.js","components/LoginForm/fields.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","shared/components/SubmitButton/SubmitButton.jsx","shared/hooks/useValidation.js","shared/hooks/useInput.js"],"sourcesContent":["const validations = {\n  email: { isEmpty: true, isEmail: true },\n  password: { isEmpty: true, minLength: 8 },\n};\n\nexport default validations;\n","const fields = {\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'Email',\n    placeholder: 'email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'Password',\n    placeholder: 'password',\n    autoComplete: 'current-password',\n  },\n};\n\nexport default fields;\n","import { useState, useEffect } from \"react\";\nimport useInput from \"shared/hooks/useInput\";\nimport validations from \"./validations\";\nimport fields from \"./fields\";\nimport SubmitButton from \"shared/components/SubmitButton/SubmitButton\";\nimport { Box, TextField } from \"@mui/material\";\n\nconst LoginForm = ({ onSubmit }) => {\n  const email = useInput(\"\", validations.email);\n  const password = useInput(\"\", validations.password);\n\n  const [state, setState] = useState({ email: \"\", password: \"\" });\n\n  useEffect(() => {\n    setState((prevState) => {\n      return {\n        ...prevState,\n\n        email: email.value,\n        password: password.value,\n      };\n    });\n  }, [email.value, password.value]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSubmit({ ...state });\n    setState({ email: \"\", password: \"\" });\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        \"& .MuiTextField-root\": { m: 1, width: \"100%\" },\n      }}\n      noValidate\n      autoComplete=\"on\"\n      onSubmit={handleSubmit}\n    >\n      <TextField\n        error={\n          (email.isDirty && email.isEmpty) ||\n          (email.isDirty && email.emailError)\n        }\n        value={email.value}\n        onChange={email.onChange}\n        onBlur={email.onBlur}\n        helperText={\n          (email.isDirty &&\n            email.isEmpty &&\n            \"Email address field shouldn't be empty\") ||\n          (email.isDirty &&\n            email.emailError &&\n            \"Email address should be at correct format\")\n        }\n        {...fields.email}\n      />\n      <TextField\n        error={\n          (password.isDirty && password.isEmpty) ||\n          (password.isDirty && password.minLengthError)\n        }\n        value={password.value}\n        onChange={password.onChange}\n        onBlur={password.onBlur}\n        helperText={\n          (password.isDirty &&\n            password.isEmpty &&\n            \"Password field shouldn't be empty\") ||\n          (password.isDirty &&\n            password.minLengthError &&\n            \"Password should have at least 8 characters\")\n        }\n        {...fields.password}\n      />\n      <SubmitButton\n        disabled={!email.inputValid || !password.inputValid}\n        type=\"submit\"\n      >\n        Login\n      </SubmitButton>\n    </Box>\n  );\n};\n\nexport default LoginForm;\n","import { useDispatch } from \"react-redux\";\nimport { Container, Box } from \"@mui/material\";\n\nimport { login } from \"redux/auth/auth-operations\";\n\nimport LoginForm from \"components/LoginForm/LoginForm\";\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n\n  const handleLogin = (data) => {\n    dispatch(login(data));\n  };\n\n  return (\n    <Box sx={{ backgroundColor: \"#edebe6\" }}>\n      <Container\n        sx={{\n          backgroundColor: \"#5b9fff\",\n          maxWidth: \"600px\",\n          height: \"100vh\",\n          paddingTop: \"20px\",\n        }}\n      >\n        <LoginForm onSubmit={handleLogin} />\n      </Container>\n    </Box>\n  );\n};\n\nexport default LoginPage;\n","import { Button, styled } from \"@mui/material\";\n\nconst SubmitButton = ({ type = \"button\", onClick, disabled, children }) => {\n  const StyledButton = styled(Button)({\n    display: \"inline-flex\",\n    marginLeft: \"20px\",\n    backgroundColor: \"#edb51a\",\n    color: \"#000000\",\n    textTransform: \"uppercase\",\n    padding: \"5px 15px\",\n    border: \"1px solid #000000\",\n    borderRadius: \"4px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    textDecoration: \"none\",\n    transition:\n      \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n      transition:\n        \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\",\n    },\n  });\n\n  return (\n    <StyledButton disabled={disabled} onClick={onClick} type={type}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default SubmitButton;\n","const { useState, useEffect } = require(\"react\");\n\nconst useValidation = (value, validations) => {\n  const [isEmpty, setIsEmpty] = useState(true);\n\n  const [minLengthError, setMinLengthError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const [inputValid, setInputValid] = useState(false);\n\n  useEffect(() => {\n    for (const validation in validations) {\n      switch (validation) {\n        case \"isEmpty\":\n          value ? setIsEmpty(false) : setIsEmpty(true);\n          break;\n\n        case \"isEmail\":\n          const regExEmail = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,5}$/;\n          regExEmail.test(value) ? setEmailError(false) : setEmailError(true);\n          break;\n\n        case \"minLength\":\n          value.length < validations[validation]\n            ? setMinLengthError(true)\n            : setMinLengthError(false);\n          break;\n\n        case \"isPassword\":\n          const regExPassword = /^[a-zA-Z]\\w{6,}$/;\n          regExPassword.test(value)\n            ? setPasswordError(false)\n            : setPasswordError(true);\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, [value, validations]);\n\n  useEffect(() => {\n    isEmpty || minLengthError || emailError || passwordError\n      ? setInputValid(false)\n      : setInputValid(true);\n  }, [isEmpty, minLengthError, emailError, passwordError, validations]);\n\n  return {\n    isEmpty,\n    minLengthError,\n    emailError,\n    passwordError,\n    inputValid,\n  };\n};\n\nexport default useValidation;\n","import { useState } from \"react\";\nimport useValidation from \"./useValidation\";\n\nconst useInput = (initialValue, validations) => {\n  const [value, setValue] = useState(initialValue);\n  const [isDirty, setIsDirty] = useState(false);\n  const valid = useValidation(value, validations);\n\n  const onChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const onBlur = () => {\n    setIsDirty(true);\n  };\n\n  return {\n    value,\n    onChange,\n    onBlur,\n    isDirty,\n    ...valid,\n  };\n};\n\nexport default useInput;\n"],"names":["email","isEmpty","isEmail","password","minLength","type","name","required","label","placeholder","autoComplete","onSubmit","useInput","validations","useState","state","setState","useEffect","prevState","value","Box","component","sx","m","width","noValidate","event","preventDefault","TextField","error","isDirty","emailError","onChange","onBlur","helperText","fields","minLengthError","SubmitButton","disabled","inputValid","dispatch","useDispatch","backgroundColor","Container","maxWidth","height","paddingTop","data","login","onClick","children","StyledButton","styled","Button","display","marginLeft","color","textTransform","padding","border","borderRadius","justifyContent","alignItems","cursor","textDecoration","transition","require","setIsEmpty","setMinLengthError","setEmailError","passwordError","setPasswordError","setInputValid","validation","test","length","initialValue","setValue","setIsDirty","valid","useValidation","target"],"sourceRoot":""}