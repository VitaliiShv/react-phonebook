{"version":3,"file":"static/js/24.5a5be095.chunk.js","mappings":"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","sources":["components/RegisterForm/initialState.js","components/RegisterForm/fields.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","shared/components/Button/Button.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","shared/components/TextField/TextField.jsx","../node_modules/nanoid/index.browser.js","shared/hooks/useForm.js"],"sourcesContent":["const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    required: true,\n    label: 'Username',\n    placeholder: 'Username',\n  },\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'Email',\n    placeholder: 'email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'Password',\n    placeholder: 'password',\n  },\n};\n\nexport default fields;\n","import TextField from \"shared/components/TextField/TextField\";\nimport useForm from \"shared/hooks/useForm\";\nimport initialState from \"./initialState\";\nimport fields from \"./fields\";\nimport Button from \"shared/components/Button/Button\";\n\nconst RegisterForm = ({ onSubmit }) => {\n    const { state, handleChange, handleSubmit } = useForm({initialState, onSubmit});\n    const { name, email, password } = state;\n    \n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField value={name} handleChange={handleChange} {...fields.name} />\n            <TextField value={email} handleChange={handleChange} {...fields.email} />\n            <TextField value={password} handleChange={handleChange} {...fields.password} />\n            <Button type=\"submit\">Register</Button>\n        </form>\n    )\n};\n\nexport default RegisterForm;","import { useSelector, useDispatch } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nimport { signup } from \"redux/auth/auth-operations\";\nimport { isUserLogin } from \"redux/auth/auth-selectors\";\n\nimport RegisterForm from \"components/RegisterForm/RegisterForm\";\n\nconst RegisterPage = () => {\n    const isLogin = useSelector(isUserLogin);\n    const dispatch = useDispatch();\n\n    const handleSignup = data => {\n        dispatch(signup(data))\n    };\n\n    if (isLogin) {\n    return<Navigate to='/contacts' />\n}\n\n    return (<>\n        <h1>Register page</h1>\n        <RegisterForm onSubmit={handleSignup} />\n    </>)\n};\n\nexport default RegisterPage;","const Button = ({ type = 'button', onClick, children }) => {\n  return (\n    <button onClick={onClick} type={type}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { useMemo } from \"react\";\nimport { nanoid } from \"nanoid\";\n\n\nconst TextField = ({ label, handleChange, ...props }) => {\n    const id = useMemo(() => nanoid(), []);\n\n\n    return (\n        <div>\n            <label htmlFor={id}>{label}</label>\n            <input id={id} onChange={handleChange} {...props}></input>\n        </div>\n    )\n}\n\nexport default TextField;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["name","email","password","type","required","label","placeholder","onSubmit","useForm","initialState","state","handleChange","handleSubmit","TextField","value","fields","Button","isLogin","useSelector","isUserLogin","dispatch","useDispatch","to","data","signup","onClick","children","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","props","id","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor","onChange","useState","setState","event","prevState","preventDefault"],"sourceRoot":""}