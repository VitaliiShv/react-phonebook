{"version":3,"file":"static/js/633.3577d64d.chunk.js","mappings":"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","sources":["components/ContactForm/fields.js","components/ContactForm/initialState.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","redux/filter/filter-selectors.js","components/Filter/Filter.jsx","components/ContactList/ContactList.module.css","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx","shared/components/Button/Button.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","shared/components/TextField/TextField.jsx","../node_modules/nanoid/index.browser.js","shared/hooks/useForm.js"],"sourcesContent":["const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n    required: true,\n    label: 'name',\n    placeholder: 'name',\n  },\n  number: {\n    type: 'tel',\n    name: 'number',\n    pattern: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n    title:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n    required: true,\n    label: 'number',\n    placeholder: 'number',\n  },\n};\n\nexport default fields;\n","const initialState = {\n  name: '',\n  number: '',\n};\n\nexport default initialState;\n","import PropTypes from 'prop-types';\n// import css from './ContactForm.module.css';\nimport TextField from 'shared/components/TextField/TextField';\nimport Button from 'shared/components/Button/Button';\nimport fields from './fields';\nimport initialState from './initialState';\nimport useForm from 'shared/hooks/useForm';\n\nconst ContactForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { name, number } = state;\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField value={name} handleChange={handleChange} {...fields.name} />\n      <TextField\n        value={number}\n        handleChange={handleChange}\n        {...fields.number}\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","export const getFilter = store => store.filter;\n","import css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { setFilter } from 'redux/filter/filrter-slice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(getFilter);\n\n  const changeFilter = ({ target }) => {\n    const action = setFilter(target.value);\n    dispatch(action);\n  };\n\n  return (\n    <div className={css.filterLabel}>\n      <label>\n        Find contact by name\n        <input\n          className={css.filterInput}\n          type=\"text\"\n          value={filter}\n          onChange={changeFilter}\n        />\n      </label>\n    </div>\n  );\n};\n\n\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {};","import Button from 'shared/components/Button/Button';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\n\nconst Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const onDeleteContact = contactId => {\n    const action = deleteContact(contactId);\n    dispatch(action);\n  };\n\n  return (\n    <div>\n      <p>\n        {name}: {number}\n      </p>\n      <Button onClick={() => onDeleteContact(id)}>Delete contact</Button>\n    </div>\n  );\n};\n\nexport default Contact;\n","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport Contact from 'components/Contact/Contact';\n\nconst ContactList = ({ contacts }) => {\n  const elements = contacts.map(({ id, name, number }) => (\n    <li className={css.contactListItem} key={id}>\n      <Contact id={id} name={name} number={number}></Contact>\n    </li>\n  ));\n\n  return <ul className={css.contactList}>{elements}</ul>;\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","export const getAllContacts = store => store.contacts.items;\nexport const getFilteredContacts = store => {\n  if (!store.filter) {\n    return store.contacts.items;\n  }\n  const normalizedFilter = store.filter.toLowerCase();\n  return store.contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nexport const getIsLoading = store => store.contacts.isLoading;\n\nexport const getError = store => store.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsPage_container__BnqXB\"};","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport {\n  getAllContacts,\n  getError,\n  getFilteredContacts,\n  getIsLoading,\n} from 'redux/contacts/contacts-selectors';\nimport { addContact } from 'redux/contacts/contacts-operations';\n\nimport css from './ContactsPage.module.css';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const contacts = useSelector(getAllContacts);\n  const filteredContacts = useSelector(getFilteredContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isDuplicate = name => {\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contact list`);\n      return true;\n    }\n  };\n\n  const onAddContact = ({ name, number }) => {\n    if (isDuplicate(name)) {\n      return;\n    }\n    const action = addContact({ name, number });\n    dispatch(action);\n  };\n\n  return (\n    <div className={css.container}>\n      <ContactForm onSubmit={onAddContact} />\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      {filteredContacts.length > 0 && (\n        <ContactList contacts={filteredContacts} />\n      )}\n      {filteredContacts.length <= 0 && <p>sorry... something bad happens</p>}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n","const Button = ({ type = 'button', onClick, children }) => {\n  return (\n    <button onClick={onClick} type={type}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { useMemo } from \"react\";\nimport { nanoid } from \"nanoid\";\n\n\nconst TextField = ({ label, handleChange, ...props }) => {\n    const id = useMemo(() => nanoid(), []);\n\n\n    return (\n        <div>\n            <label htmlFor={id}>{label}</label>\n            <input id={id} onChange={handleChange} {...props}></input>\n        </div>\n    )\n}\n\nexport default TextField;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["name","type","pattern","title","required","label","placeholder","number","onSubmit","useForm","initialState","state","handleChange","handleSubmit","TextField","value","fields","Button","getFilter","store","filter","dispatch","useDispatch","useSelector","className","css","onChange","target","action","setFilter","id","onClick","contactId","deleteContact","onDeleteContact","elements","contacts","map","getAllContacts","items","getFilteredContacts","normalizedFilter","toLowerCase","contact","includes","getIsLoading","isLoading","getError","error","filteredContacts","useEffect","fetchContacts","find","alert","isDuplicate","addContact","length","children","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","props","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor","useState","setState","event","prevState","preventDefault"],"sourceRoot":""}